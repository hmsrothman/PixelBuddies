import vector.Matrix4f;
import vector.Vector2f;
import vector.Vector3f;

public class Camera2D {
	int screenWidth, screenHeight;
	boolean needsUpdate;
	float scale;
	Vector2f pos;
	Matrix4f cameraMat;
	Matrix4f orthoMat;

	public Camera2D(int screenWidth, int screenHeight) {
		pos = new Vector2f(0, 0);
		scale = 100;
		cameraMat = new Matrix4f();
		needsUpdate = true;
		screenWidth = 0;
		screenHeight = 0;
		orthoMat = new Matrix4f();
		init(screenWidth, screenHeight);
	}

	private void init(int screenWidth, int screenHeight) {
		this.screenWidth = screenWidth;
		this.screenHeight = screenHeight;
		orthoMat = MathUtil.toOrtho2D(orthoMat, 0.0f, 0.0f, 192, 108);
		cameraMat = orthoMat.translate(new Vector3f(-pos.x,-pos.y,0));
		needsUpdate = false;
	}

	public boolean update() {
		if (needsUpdate) {
			Vector3f translate = new Vector3f(-pos.x, -pos.y, 0);

			Vector3f scale = new Vector3f(this.scale, this.scale, 0);

			orthoMat = MathUtil.toOrtho2D(orthoMat, (float) (-screenWidth / 2.0 * scale.x),
					(float) (-screenHeight / 2.0 * scale.y), (float) (screenWidth / 2.0 * scale.x),
					(float) (screenHeight / 2.0 * scale.y));
			cameraMat = Matrix4f.translate(translate, orthoMat, cameraMat); // TRANSLATE

			needsUpdate = false;
			return true;
		}
		return false;
	}

	public void setPosition(Vector2f position) {
		pos = position;
		needsUpdate = true;
	}

	public void setScale(float scale) {
		this.scale = scale;
		needsUpdate = true;
	}

	Vector2f getPosition() {
		return pos;
	}

	float getScale() {
		return scale;
	}

	Matrix4f getMatrix() {
		return cameraMat;
	}
}
